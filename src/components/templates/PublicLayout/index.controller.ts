// H√†m k·∫øt n·ªëi fb
export const handleLogin = () => {
    window.FB.login((response: any) => {
      if (response.authResponse) {
        const userAccessToken = response.authResponse.accessToken;
        window.FB.api(`/me?fields=id,name,accounts&access_token=${userAccessToken}`, { access_token: userAccessToken }, (resp: any) => {
          console.log("üöÄ ~ file: index.tsx:242 ~ window.FB.api ~ resp:", resp)
        });
      } else {
        console.log("Login cancelled");
      }
    });
};

// H√†m getUserMedia n√†y s·ª≠ d·ª•ng API getUserMedia c·ªßa tr√¨nh duy·ªát ƒë·ªÉ y√™u c·∫ßu quy·ªÅn truy c·∫≠p v√†o thi·∫øt b·ªã √¢m thanh (microphone) c·ªßa ng∆∞·ªùi d√πng
export const getUserMedia = async () => {
    try {
      navigator.mediaDevices.getUserMedia({ audio: true, video: false })
        .then((stream) => {// X·ª≠ l√Ω stream audio ·ªü ƒë√¢y
        })
        .catch((error) => { // X·ª≠ l√Ω l·ªói n·∫øu kh√¥ng th·ªÉ truy c·∫≠p thi·∫øt b·ªã √¢m thanh
          return;
        });
    } catch (error) {    // X·ª≠ l√Ω l·ªói n·∫øu c√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh g·ªçi getUserMedia

      return;
    }
  };